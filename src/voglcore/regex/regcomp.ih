/* ========= begin header generated by ./mkh ========= */
#ifdef __cplusplus
extern "C" {
#endif

/* === regcomp.c === */
static void vogl_p_ere(register struct parse *p, int stop);
static void vogl_p_ere_exp(register struct parse *p);
static void vogl_p_str(register struct parse *p);
static void vogl_p_bre(register struct parse *p, register int end1, register int end2);
static int vogl_p_simp_re(register struct parse *p, int starordinary);
static int vogl_p_count(register struct parse *p);
static void vogl_p_bracket(register struct parse *p);
static void vogl_p_b_term(register struct parse *p, register cset *cs);
static void vogl_p_b_cclass(register struct parse *p, register cset *cs);
static void vogl_p_b_eclass(register struct parse *p, register cset *cs);
static char vogl_p_b_symbol(register struct parse *p);
static char vogl_p_b_coll_elem(register struct parse *p, int endc);
static char vogl_othercase(int ch);
static void vogl_bothcases(register struct parse *p, int ch);
static void vogl_ordinary(register struct parse *p, register int ch);
static void vogl_nonnewline(register struct parse *p);
static void vogl_repeat(register struct parse *p, sopno start, int from, int to);
static int vogl_seterr(register struct parse *p, int e);
static cset *vogl_allocset(register struct parse *p);
static void vogl_freeset(register struct parse *p, register cset *cs);
static int vogl_freezeset(register struct parse *p, register cset *cs);
static int vogl_firstch(register struct parse *p, register cset *cs);
static int vogl_nch(register struct parse *p, register cset *cs);
static void vogl_mcadd(register struct parse *p, register cset *cs, register char *cp);
static void vogl_mcsub(register cset *cs, register char *cp);
static int vogl_mcin(register cset *cs, register char *cp);
static char *vogl_mcfind(register cset *cs, register char *cp);
static void vogl_mcinvert(register struct parse *p, register cset *cs);
static void vogl_mccase(register struct parse *p, register cset *cs);
static int vogl_isinsets(register struct re_guts *g, int c);
static int vogl_samesets(register struct re_guts *g, int c1, int c2);
static void vogl_categorize(struct parse *p, register struct re_guts *g);
static sopno vogl_dupl(register struct parse *p, sopno start, sopno finish);
static void vogl_doemit(register struct parse *p, sop op, size_t opnd);
static void vogl_doinsert(register struct parse *p, sop op, size_t opnd, sopno pos);
static void vogl_dofwd(register struct parse *p, sopno pos, sop value);
static void vogl_enlarge(register struct parse *p, sopno size);
static void vogl_stripsnug(register struct parse *p, register struct re_guts *g);
static void vogl_findmust(register struct parse *p, register struct re_guts *g);
static sopno vogl_pluscount(register struct parse *p, register struct re_guts *g);

#ifdef __cplusplus
}
#endif
/* ========= end header generated by ./mkh ========= */
